package com.creativegrid.screenshot;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import org.json.JSONArray;
import org.json.JSONException;

import android.app.AlertDialog;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.Canvas;
import android.graphics.Picture;
import android.os.Environment;
import android.webkit.WebView;

import com.phonegap.api.Plugin;
import com.phonegap.api.PluginResult;
import com.phonegap.api.PluginResult.Status;

public class Screenshot extends Plugin {

	private static final String SHOW = "show";
	private static final int MSG_INDEX = 0;
	private String msg;
	@Override
	public PluginResult execute(String arg0, final JSONArray arg1, String arg2) {
		if ( arg0.equals(SHOW) )
		{
			this.ctx.runOnUiThread(new Runnable()
			{
				public void run()
				{
					// try/catch generated by editor
					try {
						msg = arg1.getString(MSG_INDEX);
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					AlertDialog alertDialog = new AlertDialog.Builder(ctx).create();
					alertDialog.setTitle("Title");
					alertDialog.setMessage(msg);
					alertDialog.show();

					WebView area = webView;

					Picture picture = area.capturePicture();
					Bitmap bm = Bitmap.createBitmap(picture.getWidth(), picture.getHeight(), Bitmap.Config.ARGB_8888);
					Canvas c = new Canvas(bm);
					picture.draw(c);
					OutputStream stream = null;
					try {
						stream = new FileOutputStream(Environment.getExternalStorageDirectory() +"/screenshot.png");
						bm.compress(CompressFormat.PNG, 80, stream);
						if (stream != null) stream.close();
					} catch (IOException e) {
					} finally {
						bm.recycle();
					}

				}
			});
		}

		return new PluginResult(Status.OK);
	}

}